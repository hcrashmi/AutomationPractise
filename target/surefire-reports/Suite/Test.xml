<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite name="Test" tests="2" failures="0" timestamp="26 Apr 2018 09:58:59 GMT" time="0.083" errors="0">
  <testcase name="@BeforeClass classTest" time="0.0" classname="scripts.LoginTest">
    <failure type="java.lang.IllegalStateException" message="The driver is not executable: /home/tyss/Desktop/demoExtentrepo/./src/main/resources/driver/geckodriver.exe">
      <![CDATA[java.lang.IllegalStateException: The driver is not executable: /home/tyss/Desktop/demoExtentrepo/./src/main/resources/driver/geckodriver.exe
	at com.google.common.base.Preconditions.checkState(Preconditions.java:585)
	at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:140)
	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:131)
	at org.openqa.selenium.firefox.GeckoDriverService.access$100(GeckoDriverService.java:41)
	at org.openqa.selenium.firefox.GeckoDriverService$Builder.findDefaultExecutable(GeckoDriverService.java:141)
	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:339)
	at org.openqa.selenium.firefox.FirefoxDriver.toExecutor(FirefoxDriver.java:158)
	at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:120)
	at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:98)
	at generic.EXTENTRe.classTest(EXTENTRe.java:48)
... Removed 28 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass classTest -->
  <testcase name="@BeforeMethod preCondition" time="0.0" classname="scripts.LoginTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod preCondition -->
  <testcase name="@AfterMethod postCondition" time="0.0" classname="scripts.LoginTest">
    <skipped/>
  </testcase> <!-- @AfterMethod postCondition -->
  <testcase name="@AfterClass afterclass" time="0.0" classname="scripts.LoginTest">
    <skipped/>
  </testcase> <!-- @AfterClass afterclass -->
  <testcase name="@BeforeClass classTest" time="0.0" classname="scripts.DressTest">
    <skipped/>
  </testcase> <!-- @BeforeClass classTest -->
  <testcase name="@BeforeMethod preCondition" time="0.0" classname="scripts.DressTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod preCondition -->
  <testcase name="@AfterMethod postCondition" time="0.0" classname="scripts.DressTest">
    <skipped/>
  </testcase> <!-- @AfterMethod postCondition -->
  <testcase name="@AfterClass afterclass" time="0.0" classname="scripts.DressTest">
    <skipped/>
  </testcase> <!-- @AfterClass afterclass -->
  <testcase name="loginToApp" time="0.0" classname="scripts.LoginTest">
    <skipped/>
  </testcase> <!-- loginToApp -->
  <testcase name="dressTest" time="0.0" classname="scripts.DressTest">
    <skipped/>
  </testcase> <!-- dressTest -->
</testsuite> <!-- Test -->
